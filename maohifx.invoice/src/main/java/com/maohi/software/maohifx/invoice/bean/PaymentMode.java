package com.maohi.software.maohifx.invoice.bean;
// Generated 10 dï¿½c. 2015 13:34:05 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * PaymentMode generated by hbm2java
 */
@Entity
@Table(name = "payment_mode")
@JsonIgnoreProperties({ "invoicePaymentLines" })
public class PaymentMode implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private int id;
	private Date creationDate;
	private Date updateDate;
	private String label;
	private Set<InvoicePaymentLine> invoicePaymentLines = new HashSet<>(0);

	public PaymentMode() {
	}

	public PaymentMode(final int id) {
		this.id = id;
	}

	public PaymentMode(final int id, final Date creationDate, final Date updateDate, final String label, final Set<InvoicePaymentLine> invoicePaymentLines) {
		this.id = id;
		this.creationDate = creationDate;
		this.updateDate = updateDate;
		this.label = label;
		this.invoicePaymentLines = invoicePaymentLines;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (this.getClass() != obj.getClass()) {
			return false;
		}
		final PaymentMode other = (PaymentMode) obj;
		if (this.creationDate == null) {
			if (other.creationDate != null) {
				return false;
			}
		} else if (!this.creationDate.equals(other.creationDate)) {
			return false;
		}
		if (this.id != other.id) {
			return false;
		}
		if (this.label == null) {
			if (other.label != null) {
				return false;
			}
		} else if (!this.label.equals(other.label)) {
			return false;
		}
		if (this.updateDate == null) {
			if (other.updateDate != null) {
				return false;
			}
		} else if (!this.updateDate.equals(other.updateDate)) {
			return false;
		}
		return true;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paymentMode")
	public Set<InvoicePaymentLine> getInvoicePaymentLines() {
		return this.invoicePaymentLines;
	}

	@Column(name = "label")
	public String getLabel() {
		return this.label;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = (prime * result) + ((this.creationDate == null) ? 0 : this.creationDate.hashCode());
		result = (prime * result) + this.id;
		result = (prime * result) + ((this.label == null) ? 0 : this.label.hashCode());
		result = (prime * result) + ((this.updateDate == null) ? 0 : this.updateDate.hashCode());
		return result;
	}

	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	public void setId(final int id) {
		this.id = id;
	}

	public void setInvoicePaymentLines(final Set<InvoicePaymentLine> invoicePaymentLines) {
		this.invoicePaymentLines = invoicePaymentLines;
	}

	public void setLabel(final String label) {
		this.label = label;
	}

	public void setUpdateDate(final Date updateDate) {
		this.updateDate = updateDate;
	}

}
