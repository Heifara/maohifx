package com.maohi.software.maohifx.product.bean;
// Generated 22 janv. 2016 11:29:41 by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProductPackagingMovement generated by hbm2java
 */
@Entity
@Table(name = "product_packaging_movement")
public class ProductPackagingMovement implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private ProductPackagingMovementId id;
	private ProductPackagingLot productPackagingLot;
	private Date creationDate;
	private Date updateDate;
	private Double quantity;

	public ProductPackagingMovement() {
	}

	public ProductPackagingMovement(final ProductPackagingMovementId id, final ProductPackagingLot productPackagingLot) {
		this.id = id;
		this.productPackagingLot = productPackagingLot;
	}

	public ProductPackagingMovement(final ProductPackagingMovementId id, final ProductPackagingLot productPackagingLot, final Date creationDate, final Date updateDate, final Double quantity) {
		this.id = id;
		this.productPackagingLot = productPackagingLot;
		this.creationDate = creationDate;
		this.updateDate = updateDate;
		this.quantity = quantity;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "productUuid", column = @Column(name = "product_uuid", nullable = false) ), @AttributeOverride(name = "packagingCode", column = @Column(name = "packaging_code", nullable = false, length = 45) ), @AttributeOverride(name = "lot", column = @Column(name = "lot", nullable = false) ), @AttributeOverride(name = "id", column = @Column(name = "id", nullable = false) ) })
	public ProductPackagingMovementId getId() {
		return this.id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "product_uuid", referencedColumnName = "product_packaging_product_uuid", nullable = false, insertable = false, updatable = false), @JoinColumn(name = "packaging_code", referencedColumnName = "product_packaging_packaging_code", nullable = false, insertable = false, updatable = false), @JoinColumn(name = "lot", referencedColumnName = "lot", nullable = false, insertable = false, updatable = false) })
	public ProductPackagingLot getProductPackagingLot() {
		return this.productPackagingLot;
	}

	@Column(name = "quantity", precision = 22, scale = 0)
	public Double getQuantity() {
		return this.quantity;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	public void setId(final ProductPackagingMovementId id) {
		this.id = id;
	}

	public void setProductPackagingLot(final ProductPackagingLot productPackagingLot) {
		this.productPackagingLot = productPackagingLot;
	}

	public void setQuantity(final Double quantity) {
		this.quantity = quantity;
	}

	public void setUpdateDate(final Date updateDate) {
		this.updateDate = updateDate;
	}

}
