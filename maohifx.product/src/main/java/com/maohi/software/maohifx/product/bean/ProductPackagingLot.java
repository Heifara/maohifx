package com.maohi.software.maohifx.product.bean;
// Generated 14 janv. 2016 09:57:06 by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProductPackagingLot generated by hbm2java
 */
@Entity
@Table(name = "product_packaging_lot")
public class ProductPackagingLot implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private ProductPackagingLotId id;
	private ProductPackaging productPackaging;
	private Date creationDate;
	private Date updateDate;
	private Double costPrice;
	private Double weightedAverageCostPrice;
	private Date bestBefore;

	public ProductPackagingLot() {
	}

	public ProductPackagingLot(final ProductPackagingLotId id, final ProductPackaging productPackaging) {
		this.id = id;
		this.productPackaging = productPackaging;
	}

	public ProductPackagingLot(final ProductPackagingLotId id, final ProductPackaging productPackaging, final Date creationDate, final Date updateDate, final Double costPrice, final Double weightedAverageCostPrice, final Date bestBefore) {
		this.id = id;
		this.productPackaging = productPackaging;
		this.creationDate = creationDate;
		this.updateDate = updateDate;
		this.costPrice = costPrice;
		this.weightedAverageCostPrice = weightedAverageCostPrice;
		this.bestBefore = bestBefore;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "best_before", length = 19)
	public Date getBestBefore() {
		return this.bestBefore;
	}

	@Column(name = "cost_price", precision = 22, scale = 0)
	public Double getCostPrice() {
		return this.costPrice;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "lot", column = @Column(name = "lot", nullable = false) ), @AttributeOverride(name = "productPackagingPackagingCode", column = @Column(name = "product_packaging_packaging_code", nullable = false, length = 45) ), @AttributeOverride(name = "productPackagingProductUuid", column = @Column(name = "product_packaging_product_uuid", nullable = false) ) })
	public ProductPackagingLotId getId() {
		return this.id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns({ @JoinColumn(name = "product_packaging_product_uuid", referencedColumnName = "product_uuid", nullable = false, insertable = false, updatable = false), @JoinColumn(name = "product_packaging_packaging_code", referencedColumnName = "packaging_code", nullable = false, insertable = false, updatable = false) })
	public ProductPackaging getProductPackaging() {
		return this.productPackaging;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	@Column(name = "weighted_average_cost_price", precision = 22, scale = 0)
	public Double getWeightedAverageCostPrice() {
		return this.weightedAverageCostPrice;
	}

	public void parse(final int aLot, final ProductPackaging aProductPackaging, final Double aCostPrice, final Double aWeightedAverageCostPrice, final Date aBestBefore) {
		this.id = new ProductPackagingLotId();
		this.id.setLot(aLot);
		this.id.setProductPackagingPackagingCode(aProductPackaging.getId().getPackagingCode());
		this.id.setProductPackagingProductUuid(aProductPackaging.getId().getProductUuid());

		this.productPackaging = aProductPackaging;
		this.creationDate = new Date();
		this.updateDate = new Date();
		this.costPrice = aCostPrice;
		this.weightedAverageCostPrice = aWeightedAverageCostPrice;
		this.bestBefore = aBestBefore;
	}

	public void setBestBefore(final Date bestBefore) {
		this.bestBefore = bestBefore;
	}

	public void setCostPrice(final Double costPrice) {
		this.costPrice = costPrice;
	}

	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	public void setId(final ProductPackagingLotId id) {
		this.id = id;
	}

	public void setProductPackaging(final ProductPackaging productPackaging) {
		this.productPackaging = productPackaging;
	}

	public void setUpdateDate(final Date updateDate) {
		this.updateDate = updateDate;
	}

	public void setWeightedAverageCostPrice(final Double weightedAverageCostPrice) {
		this.weightedAverageCostPrice = weightedAverageCostPrice;
	}

}
