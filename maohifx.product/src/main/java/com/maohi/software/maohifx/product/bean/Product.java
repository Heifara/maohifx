package com.maohi.software.maohifx.product.bean;
// Generated 8 janv. 2016 12:27:52 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.maohi.software.maohifx.common.server.AnnotatedClass;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product")
public class Product implements java.io.Serializable, AnnotatedClass {

	private static final long serialVersionUID = 1L;

	private String uuid;
	private Tva tva;
	private Date creationDate;
	private Date updateDate;
	private String designation;
	private Set<ProductPackaging> productPackagings = new HashSet<>(0);

	private String href;

	public Product() {
	}

	public Product(final String uuid, final Tva tva) {
		this.uuid = uuid;
		this.tva = tva;
	}

	public Product(final String uuid, final Tva tva, final Date creationDate, final Date updateDate, final String designation, final Set<ProductPackaging> productPackagings) {
		this.uuid = uuid;
		this.tva = tva;
		this.creationDate = creationDate;
		this.updateDate = updateDate;
		this.designation = designation;
		this.productPackagings = productPackagings;
	}

	public ProductPackagingBarcode add(final Barcode aBarcode, final String aPackaging) {
		if (this.contains(aPackaging)) {
			final ProductPackaging iProductPackaging = this.getProductPackaging(aPackaging);
			return iProductPackaging.add(aBarcode);
		}
		return null;
	}

	public ProductPackaging add(final Packaging aPackaging) {
		if (!this.contains(aPackaging.getCode())) {
			final ProductPackaging iProductPackaging = new ProductPackaging();
			iProductPackaging.setId(new ProductPackagingId(this.uuid, aPackaging.getCode()));
			iProductPackaging.setProduct(this);
			iProductPackaging.setPackaging(aPackaging);
			iProductPackaging.setMain(false);
			iProductPackaging.setSellingPrice(0.0);
			iProductPackaging.setCreationDate(new Date());
			iProductPackaging.setUpdateDate(new Date());
			this.productPackagings.add(iProductPackaging);
			return iProductPackaging;
		}

		return null;
	}

	public void bindChildren() {
		for (final ProductPackaging iProductPackaging : this.productPackagings) {
			iProductPackaging.setProduct(this);
			iProductPackaging.getId().setProductUuid(this.uuid);
		}
	}

	public boolean contains(final String aPackaging) {
		if (this.indexOfPackaging(aPackaging) != -1) {
			return true;
		} else {
			return false;
		}
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	@Column(name = "designation")
	public String getDesignation() {
		return this.designation;
	}

	@Transient
	public String getHref() {
		return this.href;
	}

	@Transient
	public Packaging getPackaging(final String aPackaging) {
		final ProductPackaging iProductPackaging = this.getProductPackaging(aPackaging);
		if (iProductPackaging != null) {
			return iProductPackaging.getPackaging();
		}
		return null;
	}

	@Transient
	public ProductPackaging getProductPackaging(final String aPackaging) {
		final Iterator<ProductPackaging> iIterator = this.productPackagings.iterator();
		while (iIterator.hasNext()) {
			final ProductPackaging iProductPackaging = iIterator.next();
			if (iProductPackaging.getPackaging().getCode().equals(aPackaging)) {
				return iProductPackaging;
			}
		}
		return null;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "product", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<ProductPackaging> getProductPackagings() {
		return this.productPackagings;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "tva_type", nullable = false)
	public Tva getTva() {
		return this.tva;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	@Override
	@Id
	@Column(name = "uuid", unique = true, nullable = false)
	public String getUuid() {
		return this.uuid;
	}

	public int indexOfPackaging(final String aPackaging) {
		int iCount = -1;
		final Iterator<ProductPackaging> iIterator = this.productPackagings.iterator();
		while (iIterator.hasNext()) {
			iCount++;
			final ProductPackaging iProductPackaging = iIterator.next();
			if (iProductPackaging.getPackaging().getCode().equals(aPackaging)) {
				return iCount;
			}
		}
		return iCount;
	}

	public ProductPackagingBarcode remove(final Barcode aBarcode, final Packaging aPackaging) {
		final ProductPackaging iProductPackaging = this.getProductPackaging(aPackaging.getCode());
		if (iProductPackaging != null) {
			final ProductPackagingBarcode iProductPackagingBarcode = iProductPackaging.remove(aBarcode);
			return iProductPackagingBarcode;
		} else {
			return null;
		}
	}

	public ProductPackaging remove(final Packaging aPackaging) {
		final ProductPackaging iProductPackaging = this.getProductPackaging(aPackaging.getCode());
		if (iProductPackaging != null) {
			this.productPackagings.remove(iProductPackaging);
			return iProductPackaging;
		} else {
			return null;
		}
	}

	@Override
	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	public void setDesignation(final String designation) {
		this.designation = designation;
	}

	@Override
	public void setHref(final String href) {
		this.href = href;
	}

	public void setProductPackagings(final Set<ProductPackaging> productPackagings) {
		this.productPackagings = productPackagings;
	}

	public void setTva(final Tva tva) {
		this.tva = tva;
	}

	@Override
	public void setUpdateDate(final Date updateDate) {
		this.updateDate = updateDate;
	}

	@Override
	public void setUuid(final String uuid) {
		this.uuid = uuid;
	}

}
