package com.maohi.software.maohifx.contact.bean;
// Generated 28 dï¿½c. 2015 09:50:49 by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.maohi.software.maohifx.common.server.AnnotatedClass;

/**
 * Salesman generated by hbm2java
 */
@Entity
@Table(name = "salesman")
public class Salesman implements java.io.Serializable, AnnotatedClass {

	private static final long serialVersionUID = 1L;

	private String uuid;

	private Contact contact;

	private Date creationDate;
	private Date updateDate;
	private String code;
	private Double salesCommission;
	private String href;

	public Salesman() {
	}

	public Salesman(final Contact contact) {
		this.contact = contact;
	}

	public Salesman(final Contact contact, final Date creationDate, final Date updateDate, final String code, final Double salesCommission) {
		this.contact = contact;
		this.creationDate = creationDate;
		this.updateDate = updateDate;
		this.code = code;
		this.salesCommission = salesCommission;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (this.getClass() != obj.getClass()) {
			return false;
		}
		final Salesman other = (Salesman) obj;
		if (this.code == null) {
			if (other.code != null) {
				return false;
			}
		} else if (!this.code.equals(other.code)) {
			return false;
		}
		if (this.creationDate == null) {
			if (other.creationDate != null) {
				return false;
			}
		} else if (!this.creationDate.equals(other.creationDate)) {
			return false;
		}
		if (this.salesCommission == null) {
			if (other.salesCommission != null) {
				return false;
			}
		} else if (!this.salesCommission.equals(other.salesCommission)) {
			return false;
		}
		if (this.updateDate == null) {
			if (other.updateDate != null) {
				return false;
			}
		} else if (!this.updateDate.equals(other.updateDate)) {
			return false;
		}
		if (this.uuid == null) {
			if (other.uuid != null) {
				return false;
			}
		} else if (!this.uuid.equals(other.uuid)) {
			return false;
		}
		return true;
	}

	@Column(name = "code", length = 45)
	public String getCode() {
		return this.code;
	}

	@OneToOne(fetch = FetchType.EAGER)
	@PrimaryKeyJoinColumn
	public Contact getContact() {
		return this.contact;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	@Transient
	public String getHref() {
		return this.href;
	}

	@Column(name = "sales_commission", precision = 22, scale = 0)
	public Double getSalesCommission() {
		return this.salesCommission;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	@Override
	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "contact") )
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "uuid", unique = true, nullable = false)
	public String getUuid() {
		return this.uuid;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = (prime * result) + ((this.code == null) ? 0 : this.code.hashCode());
		result = (prime * result) + ((this.creationDate == null) ? 0 : this.creationDate.hashCode());
		result = (prime * result) + ((this.salesCommission == null) ? 0 : this.salesCommission.hashCode());
		result = (prime * result) + ((this.updateDate == null) ? 0 : this.updateDate.hashCode());
		result = (prime * result) + ((this.uuid == null) ? 0 : this.uuid.hashCode());
		return result;
	}

	public void setCode(final String code) {
		this.code = code;
	}

	public void setContact(final Contact contact) {
		this.contact = contact;
	}

	@Override
	public void setCreationDate(final Date creationDate) {
		this.creationDate = creationDate;
	}

	@Override
	public void setHref(final String aHref) {
		this.href = aHref;
	}

	public void setSalesCommission(final Double salesCommission) {
		this.salesCommission = salesCommission;
	}

	@Override
	public void setUpdateDate(final Date updateDate) {
		this.updateDate = updateDate;
	}

	@Override
	public void setUuid(final String uuid) {
		this.uuid = uuid;

		if (this.contact != null) {
			this.contact.setUuid(this.uuid);
		}
	}

}
